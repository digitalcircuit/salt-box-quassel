# systemd unit file for network-user-lockdown
# Based on:  https://bbs.archlinux.org/viewtopic.php?id=148170
# And: https://blog.hqcodeshop.fi/archives/93-Handling-varrun-with-systemd.html
[Unit]
Description=Quassel IRC network access lockdown
After=local-fs.target network.target

[Service]
Type=oneshot
# Need to do cleanup, too
RemainAfterExit=yes
SyslogIdentifier=network-user-lockdown
# Protections
# > Basic
ProtectSystem=strict
PrivateTmp=true
# > More thorough
#ProtectHome=true
# Don't block /root for configuration data
InaccessiblePaths=/home /run/user
# Allow access to configuration
ReadOnlyPaths=/root
ProtectKernelTunables=true
ProtectControlGroups=true
# Allow inserting iptables/ip6tables kernel modules
#ProtectKernelModules=true
# Ubuntu 20.04: Allow iptables/ip6tables to acquire a runtime lock
# /run/xtables.lock
# Is there a better way to limit this?
ReadWritePaths=/run
PrivateDevices=true
SystemCallArchitectures=native
CapabilityBoundingSet=~CAP_SYS_ADMIN
# ---
# Startup
ExecStart=/root/salt/quassel/network-user-lockdown-configure.sh enable
# Refresh
ExecReload=/root/salt/quassel/network-user-lockdown-configure.sh refresh
# Clean up iptables rules, including after failures
ExecStopPost=/root/salt/quassel/network-user-lockdown-configure.sh disable

[Install]
WantedBy=multi-user.target
