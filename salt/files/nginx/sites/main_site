# Proxy configuration
# > Quassel Web chat
upstream quassel-web {
	# Port based:
	#server http://127.0.0.1:64080

	# Socket based:
	server unix:{{ salt['pillar.get']('server:chat:quassel:web:socket_dir', '/var/run/quassel-web') }}/quassel-web.sock;
}

# HTTP
server {
	# Listen on default port for non-SSL
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	# Addresses this server should respond to
	# Put the default name first (for e.g. invalid Host headers)
	server_name {{ salt['pillar.get']('system:hostname', 'dev') }} localhost;

	# Redirect to HTTPS
	# Check for specific hosts, then fall back on $server_name
	# See https://bjornjohansen.no/redirect-to-https-with-nginx
	# And https://community.letsencrypt.org/t/security-issue-with-redirects-added-by-certbots-nginx-plugin/5149
	if ($host = {{ salt['pillar.get']('system:hostname', 'dev') }}) {
		return 301 https://$host$request_uri;
	}
	# Fallback
	return 301 https://$server_name$request_uri;
}

# HTTPS
server {
	# Listen on default port for SSL
	listen 443 default_server ssl http2;
	listen [::]:443 default_server ipv6only=on ssl http2;

	# This is not needed unless HA proxy is added; comment it out for now
	#	# Don't include the port, otherwise it breaks with HA proxy
	#	# See:  https://stackoverflow.com/questions/33745178/redirect-port-80-request-to-different-apps-based-on-path
	#	port_in_redirect off;

	# [SSL Configuration]
	include includes/ssl_common;
	# > Certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
	ssl_certificate /etc/letsencrypt/live/{{ salt['pillar.get']('system:hostname', 'dev') }}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{ salt['pillar.get']('system:hostname', 'dev') }}/privkey.pem;
	#
	# > Verify chain of trust of OCSP response using Root CA and Intermediate certs
	ssl_trusted_certificate /etc/letsencrypt/live/{{ salt['pillar.get']('system:hostname', 'dev') }}/chain.pem;
	#
	# > Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
	# (Generate with: openssl dhparam -out /etc/nginx/dhparam/{{ salt['pillar.get']('system:hostname', 'dev') }}.pem 2048
	ssl_dhparam /etc/nginx/dhparam/{{ salt['pillar.get']('system:hostname', 'dev') }}.pem;

	# Addresses this server should respond to
	# Put the default name first (for e.g. invalid Host headers)
	server_name {{ salt['pillar.get']('system:hostname', 'dev') }} localhost;

	root /var/www/html_{{ salt['pillar.get']('system:hostname', 'dev') }};
	index index.html index.htm index.php;

	# [Common Configuration]
	include includes/conf_common;

	# [Exclude Indexing Configuration]
	include includes/exclude_indexing;

	# [Error Pages]
	include includes/errors_common;

	# [Deny Configuration]
	include includes/deny_common;

	# [Favicon - quassel]
	include includes/files/favicon/quassel;

	# [Let's Encrypt Challenge]
	include includes/letsencrypt_challenge;

	# Quassel Rest Search
	location /search/ {
		# [Enable PHP Handler]
		include includes/php_handler;
	}

	# Quassel Web server, from https://github.com/magne4000/quassel-webserver
	# rewrite ^[/]chat$ /chat/ permanent;
	location /chat {
		# Connect to upstream Quassel Web
		proxy_pass http://quassel-web/chat;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_http_version 1.1;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;
		proxy_redirect off;
	}
}
